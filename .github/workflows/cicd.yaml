name: Flask App CI/CD  
on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.sha }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      AWS_REGION: ap-south-1  # âœ… Needed for aws-actions/amazon-ecr-login

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        run: docker build -t $ECR_REGISTRY:$IMAGE_TAG .

      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.ECR_REGISTRY }}:${{ env.IMAGE_TAG }}
          format: 'table'

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push image to ECR
        run: docker push $ECR_REGISTRY:$IMAGE_TAG
      - name: Ping EC2
        run: ping -c 3 ${{ secrets.EC2_PUBLIC_IP }} || true
        
      - name: SSH to EC2 & Deploy
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          ssh -4 -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
            docker stop flask || true
            docker rm flask || true
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker pull $ECR_REGISTRY:$IMAGE_TAG
            docker run -d -p 5000:5000 --name flask $ECR_REGISTRY:$IMAGE_TAG
          EOF

          
